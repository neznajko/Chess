////////////////////////////////////////////////////////////////
# ifndef FIG_HPP
# define FIG_HPP
////////////////////////////////////////////////////////////////
# include "io.hpp"
////////////////////////////////////////////////////////////////
namespace Figure {
    typedef enum {
        KING,
        QUEEN,
        ROOK,
        BISHOP,
        KNIGHT,
        PAWN,
        NIL, // empty square
        GRD, // guard square
    } type;
}
////////////////////////////////////////////////////////////////
typedef Figure::type fig_t; 
////////////////////////////////////////////////////////////////
class Iterator;
////////////////////////////////////////////////////////////////
struct Unit {
    ////////////////////////////////////////////////////////////
    static const Unit NIL;
    static const Unit GRD;
    ////////////////////////////////////////////////////////////
    fig_t     fig;
    int       k; // Board Position
    int       noofmoos = 1; // number of moves( Castle Rytes )
    Iterator* itor = nullptr;
    Unit*     prev = nullptr;
    Unit*     next = nullptr;
    ////////////////////////////////////////////////////////////
    Unit( fig_t fig_=Figure::KING, int k_=0 ):
        fig( fig_ ), k( k_ ) {}
    ~Unit();
    char getchar() const {
        static const char CHAR[] = {
            'K','&','R','+','%','o',' ','='
        };
        return CHAR[ fig ];
    }
    bool isnil() const {
        return fig == Figure::NIL;
    }
    bool isgrd() const {
        return fig == Figure::GRD;
    }
};
////////////////////////////////////////////////////////////////
std::ostream& operator<<( std::ostream& os, const Unit& u );
////////////////////////////////////////////////////////////////
# endif//FIG_HPP
////////////////////////////////////////////////////////////////
// log: -CamelCase looks good vhen starting with capital letter.
